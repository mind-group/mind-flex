import classnames           from 'classnames'
import PropTypes            from 'prop-types'
import React                from 'react'


import s                    from './Flex.css'

class Flex extends React.Component {
  static propTypes = {
    center: PropTypes.bool,
    column: PropTypes.bool,
    fluid: PropTypes.bool,
    middle: PropTypes.bool,
    nowrap: PropTypes.bool,
    page: PropTypes.bool,
    wrap: PropTypes.bool,
  }

  classNames = (classList) => {
    const { className, fluid, page } = this.props
    return classnames(...classList, className, fluid && s.fluid, page && s.page)
  }

  renderMiddle() {
    const { children, style } = this.props

    return (
      <div
        className={ this.classNames([s.middle]) }
        style={ style }
      >
        <div>
          { children }
        </div>
      </div>
    )
  }

  renderCenterMidlle() {
    const { children, style } = this.props

    return (
      <div
        className={ this.classNames([s.middle]) }
        style={ style }
      >
        <div>
          <Flex center>
            { children }
          </Flex>
        </div>
      </div>
    )
  }

  render() {
    const { center, column, middle, nowrap, reverse, style, wrap } = this.props

    if (center && middle) return this.renderCenterMidlle()
    if (middle) return this.renderMiddle()

    const klass =
      center ? s.center :
      column && reverse ? s.columnReverse :
      column ? s.column :
      nowrap ? s.nowrap :
      reverse ? s.reverse :
      wrap ? s.wrap : s.default

    return (
      <div
        className={ this.classNames([klass]) }
        style={ style }
      >
        { this.props.children }
      </div>
    )
  }
}

import withStyles           from 'isomorphic-style-loader/lib/withStyles'

export default withStyles(s)(Flex)
